; ~/.gitconfig
[advice]
  statusHints = false
[alias]
  ; Add
  a = add

  ; Commit
  c = commit -m
  ca = commit -am

  ; Checkout
  co = checkout
  cb = checkout -b

  ; Diff
  d = diff

  ; Log
  lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"

  ; Pull
  pl = pull

  ; Push
  ps = push
  
  ; Remote
  r = remote -v

  ; Stash
  ss = stash
  sl = stash list
  sa = stash apply
  sd = stash drop

  ; Status
  s = status

  ; Tag
  t = tag -n
[apply]
  whitespace = nowarn
[branch]
  autosetupmerge = true
[color]
  ui = true
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  commit = yellow
  meta = yellow
  frag = magenta
  old = red
  new = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
  updated = green
[commit]
;  template = ~/.gitconfig.d/commit.tmpl
[core]
  autocrlf = false
  editor = vim
  excludesfile = ~/.gitconfig.d/excludesfile
  mergeoptions = --no-ff
;  pager = ''
  whitespace = trailing-space,space-before-tab
[diff]
;  external = diff
[help]
;  autocorrect = 1
[init]
; This is used when you git init a directory
;  templatedir = ~/.gitconfig.d/git-core/templates
[merge]
  tool = meld
  summary = true
  verbosity = 1
[push]
  default = tracking
[rerere]
  enabled = true
[user]
; See the bash.local.example file
;  email = Joshua.Estes@ScenicCityLabs.com
;  name = Joshua Estes
;  signingkey = ''

; These allow you to just do a git pull and it will pull
; from remote origin and merge into you local master
; branch, same for develop =)
[branch "master"]
  remote = origin
  merge = refs/heads/master
[branch "develop"]
  remote = origin
  merge = refs/heads/develop
