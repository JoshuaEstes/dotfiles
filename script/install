#!/usr/bin/env bash
# vi: set ft=sh :
set -e

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)
IS_DARWIN=false
if [ "$(uname)" == "Darwin" ]; then
    IS_DARWIN=true
fi

function info() {
    printf "\r[\033[00;34m..\033[0m] $1\n"
}

function success() {
    printf "\r\[\033[00;32msuccess\033[0m ] $1\n"
}

function warn() {
    printf "\r[\033[0;31mWARNING\033[0m] $1\n\n"
}

function fail() {
    printf "\r[\033[0;31mFAILURE\033[0m] $1\n\n"
    exit
}

function _ask_yes_no() {
    local answer

    printf "\r[\033[0;33m?\033[0m] $1 [Y/n]: "
    read -n 1 answer
    echo

    if [[ $answer = [nN] ]]; then
        return 1
    fi

    return 0
}

function _mkdir()
{
    if [ -d $1 ]; then
        info "Directory \"$1\" has already been created."
        return 0
    fi

    if _ask_yes_no "Make Directory: \"$1\"?"; then
        mkdir -vp $1
    fi
}

function link_file() {
    if [ ! -h $2 ]; then
        ln -Fvs $1 $2
    elif [ -h $2 ]; then
        info "$2 is already a symlink"
    fi
}

function setup_git() {
    info "Setting up Git"
    if [ $IS_DARWIN == "true" ]; then
        brew install git
    fi
    link_file $DOTFILES_ROOT/gitconfig $HOME/.gitconfig
    link_file gitconfig.d $HOME/.gitconfig.d
}

function setup_mail() {
    info "These dotfiles use Mutt as an email client"
    _mkdir $HOME/.AddressBook/
    _mkdir $HOME/.pw/ # Should this be moved to it's own section for setting up encryption?
    _mkdir $HOME/Mail/
    if [ $IS_DARWIN == "true" ]; then
        brew install mutt
        brew install offlineimap
        brew install msmtp
    fi
    # Should ppl be setup/installed here as well?
    link_file mutt $HOME/.mutt
    link_file pplconfig $HOME/.pplconfig
    link_file $DOTFILES_ROOT/msmtprc $HOME/.msmtprc && chmod 0600 $HOME/.msmtprc
    link_file $DOTFILES_ROOT/offlineimaprc $HOME/.offlineimaprc
    link_file $DOTFILES_ROOT/offlineimap.py $HOME/.offlineimap.py # Maybe move this into the lib directory?

}

function setup_address_book() {
    info "Setting up cli Address Book"
    _mkdir $HOME/.AddressBook
}

function setup_tmux() {
    info "Installing and configuring tmux"
    link_file $DOTFILES_ROOT/tmux.conf $HOME/.tmux.conf
}

function setup_composer() {
    local PHP_BIN=$(command -v php)

    info "Installing and setting up composer"

    if [ ! $PHP_BIN ]; then
        fail "PHP does not appear to be installed"
    fi

    _mkdir $HOME/.composer/
    link_file composer/composer.json $HOME/.composer/composer.json

    if [ -f $HOME/bin/composer.phar ]; then
        $PHP_BIN $HOME/bin/composer.phar selfupdate
    else
        curl -sS https://getcomposer.org/installer | $PHP_BIN -- --install-dir=$HOME/bin
    fi
    $PHP_BIN $HOME/bin/composer.phar global update
}

function setup_vim() {
    info "Setting up Vim"
    link_file vim $HOME/.vim
    link_file $DOTFILES_ROOT/vimrc $HOME/.vimrc
    if [ $IS_DARWIN == "true" ]; then
        brew install vim --with-lua
    fi
    vim +PluginInstall +qall
    cd vim/bundle/YouCompleteMe
    ./install.sh
}

function setup_taskwarrior() {
    info "setting up task warrior"
    link_file $DOTFILES_ROOT/taskrc $HOME/.taskrc
}

function setup_irssi() {
    info "Install and setup irssi"
    link_file irssi $HOME/.irssi
    if [ $IS_DARWIN == "true" ]; then
        brew install irssi --with-openssl
    fi
}

function setup_php() {
    info "php"

    curl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew
    chmod +x phpbrew
    mv phpbrew $HOME/bin/phpbrew
    # Should a php version be installed here?

    # Need to install phpenv

    setup_composer && echo
}

function setup_python() {
    info "python"
    _mkdir $HOME/Virtualenvs/
    if [ $(command -v pip) ]; then
        info "Installing virtualenv"
        pip install virtualenv
        info "Installing pep8"
        pip install pep8
    fi
}

function setup_ruby() {
    info "ruby"
    link_file $DOTFILES_ROOT/gemrc $HOME/.gemrc
    if [ $IS_DARWIN == "true" ]; then
        brew install ruby
        brew install rbenv
        brew install ruby-build
    fi
    if [ $(command -v gem) ]; then
        gem install puppet-lint
        gem install scss-lint
        gem install rubocop
        gem install compass
    fi
}

function setup_node() {
    info "node"
    if [ $IS_DARWIN == "true" ]; then
        brew install node
    fi
    if [ $(command -v npm) ]; then
        npm install -g jshint
        npm install -g grunt-cli
        npm install -g gulp
        npm install -g keybase-installer
        keybase-installer
    fi
}

function install_dotfiles() {
    info "Installing dotfiles"

    _mkdir $HOME/Projects/
    link_file $DOTFILES_ROOT/bin $HOME/bin
    link_file $DOTFILES_ROOT/ackrc $HOME/.ackrc
    link_file $DOTFILES_ROOT/bash_logout $HOME/.bash_logout
    link_file $DOTFILES_ROOT/bash_profile $HOME/.bash_profile
    link_file $DOTFILES_ROOT/bashrc $HOME/.bashrc
    link_file $DOTFILES_ROOT/inputrc $HOME/.inputrc
    link_file $DOTFILES_ROOT/bash.d $HOME/.bash.d

    if [ $IS_DARWIN == "true" ]; then
        link_file $DOTFILES_ROOT/osx $HOME/.osx
    fi

    git submodule update --init --recursive

    setup_git && echo
    setup_mail && echo
    setup_vim && echo
    setup_irssi && echo
    setup_tmux && echo


    link_file $DOTFILES_ROOT/zlogin $HOME/.zlogin
    link_file $DOTFILES_ROOT/zlogout $HOME/.zlogout
    link_file $DOTFILES_ROOT/zprofile $HOME/.zprofile
    link_file $DOTFILES_ROOT/zshenv $HOME/.zshenv
    link_file $DOTFILES_ROOT/zshrc $HOME/.zshrc
    link_file $DOTFILES_ROOT/zsh.d $HOME/.zsh.d
}

info "This install script may override some files that you already have in place."
if  ! _ask_yes_no "Do you want to continue?"; then
    exit 1
fi

if [ $IS_DARWIN == "true" ]; then
    if [ ! $(command -v brew) ]; then
        echo "Installing homebrew"
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi
    brew update
    brew tap homebrew/dupes
    brew install coreutils
    brew install findutils
    brew install bash
    brew install grep
    #brew install graphicsmagick
    #brew install webkit2png
    #brew install rename
    #brew install zopfli
    #brew install ffmpeg --with-openssl
    #brew install python
    #brew install sshfs
    #brew install trash
    #brew install node
    brew install tree
    brew install ack
    #brew install hub
    brew install bash-completion
    brew install ssh-copy-id
    brew install wget
    #brew install python3
    #brew install autoenv
    #brew install lbzip2
    brew install colordiff
    #brew install mu
    #brew install ispell
    #brew install libiconv
    brew install s3cmd
    #brew install mcrypt
    #brew install postgresql
fi

install_dotfiles && echo
setup_php && echo
setup_python && echo
setup_ruby && echo
setup_node && echo

if [ $IS_DARWIN == "true" ]; then
    brew linkapps
    brew cleanup
fi

source $HOME/.bashrc
