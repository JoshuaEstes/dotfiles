#!/usr/bin/env zsh
# vi: set ft=zsh:
####
#
# Update script for the dotfiles
#
# This will update the plugins that are installed. You can update a specific
# plugin by specifying the name of the plugin. For example, to update brew
# just type `up brew` and ONLY brew will be updated
#
# @TODO if something goes wrong during an update, should everything fail or
# should we just skip the failed plugin and continue with a message at the end
# that the plugin failed?
#
#####
set -e

echo ">> Starting Updates"
if [ -n "$1" ]; then
    plugin=$1
    if [ -f $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh ]; then
        source $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh
    else
        echo ">> No update script for \"$plugin\" found"
    fi
else
    source $DOTFILES_ROOT/plugins.zsh
    for plugin ($plugins); do
        if [ -f $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh ]; then
            echo ">> Updating $plugin"
            source $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh
        fi
    done
fi
echo ">> Updates complete"
exit

# Magento
if [ $(command -v n98-magerun.phar) ]; then
    echo "Updating Mage run for magento" &
    echo '>> n98-magerun.phar self-update'
    n98-magerun.phar self-update
    echo 'Done'
fi
#### end php ####

####
#
# Ruby
#
if [ $(command -v gem) ]; then
    echo "Updating ruby gems" &
    echo '>> gem update --system'
    gem update --system
    echo 'Done'
    echo '>> gem update'
    gem update
    echo 'Done'
    echo '>> gem cleanup'
    gem cleanup
    echo 'Done'
fi
#### end ruby ####

####
#
# Heroku
#
if [ $(command -v heroku) ]; then
    echo "Updating heroku toolbelt" &
    echo '>> heroku update'
    heroku update
    echo 'Done'
fi
#### end heroku ####
