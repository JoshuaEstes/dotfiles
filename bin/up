#!/usr/bin/env zsh
# vi: set ft=zsh:
####
#
# Need to figure out a way to break this up similar to the way "plugins" are
# installed
#
#####
set -e

echo ">> Starting Updates"
if [ -n "$1" ]; then
    plugin=$1
    if [ -f $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh ]; then
        source $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh
    else
        echo ">> No update script for \"$plugin\" found"
    fi
else
    source $DOTFILES_ROOT/plugins.zsh
    for plugin ($plugins); do
        if [ -f $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh ]; then
            echo ">> Updating $plugin"
            source $DOTFILES_ROOT/lib/plugins/$plugin/$plugin.update.zsh
        fi
    done
fi
echo ">> Updates complete"
exit

####
#
# First figure out what box it is and run the main dependency managers
#
if [ $(uname) == "Linux" ]; then
    if [ $(command -v apt-get) ]; then
        #echo '>> sudo apt-get update'
        sudo apt-get update
        #echo '>> sudo apt-get upgrade'
        sudo apt-get upgrade
    fi
fi

# Magento
if [ $(command -v n98-magerun.phar) ]; then
    echo "Updating Mage run for magento" &
    echo '>> n98-magerun.phar self-update'
    n98-magerun.phar self-update
    echo 'Done'
fi
#### end php ####

####
#
# Ruby
#
if [ $(command -v gem) ]; then
    echo "Updating ruby gems" &
    echo '>> gem update --system'
    gem update --system
    echo 'Done'
    echo '>> gem update'
    gem update
    echo 'Done'
    echo '>> gem cleanup'
    gem cleanup
    echo 'Done'
fi
#### end ruby ####

####
#
# Heroku
#
if [ $(command -v heroku) ]; then
    echo "Updating heroku toolbelt" &
    echo '>> heroku update'
    heroku update
    echo 'Done'
fi
#### end heroku ####
